incl {
    std,
}

decl {
    # bitwise 8-bit
    !not8($a),

    # arithmetic 8-bit
    !neg8($a),
    !add8($a, $b),
    !sub8($a, $b),
    !mul8($a, $b), # unsigned
    !div8($a, $b), # unsigned
}

impl {
    # bitwise 8-bit

    !not8 {
        @__cache0;
        .set 0;

        @$a;
        .inc;
        
        !for($a) {
            @__cache0;
            .dec;
        }

        !for(__cache0) {
            @$a;
            .inc;
        }
    }

    # arithmetic 8-bit

    !neg8 {
        @__cache0;
        .set 0;

        !for($a) {
            @__cache0;
            .inc;
        }

        !for(__cache0) {
            @$a;
            .dec;
        }
    }

    !add8 {
        @__cache0;
        .set 0;

        # add b to a
        !for($b) {
            @$a;
            .inc;

            # for preserving b
            @__cache0;
            .inc;
        }

        # restore b
        !for(__cache0) {
            @$b;
            .inc;
        }
    }

    !sub8 {
        @__cache0;
        .set 0;

        # add b to a
        !for($b) {
            @$a;
            .dec;

            # for preserving b
            @__cache0;
            .inc;
        }

        # restore b
        !for(__cache0) {
            @$b;
            .inc;
        }
    }

    !mul8 {
        @__cache1;
        .set 0;

        # save a to __cache1 & set a to 0
        !for($a) {
            @__cache1;
            .inc;
        }

        # a times add b to a
        !for(__cache1) {
            !add8($a, $b);
        }
    }

    !div8 {
        @__cache0;
        .set 0;
        @__cache1;
        .set 0;
        @__cache2;
        .set 0;
        @__cache3;
        .set 0;

        !for($a) {
            @__cache0;
            .inc;
        }

        !while(__cache0) {
            !for($b) {
                @__cache1;
                .inc;
                @__cache2;
                .inc;
            }

            !for(__cache2) {
                @$b;
                .inc;
            }

            !for(__cache1) {
                @__cache2;
                .inc;

                @__cache0;
                .dec;

                !for(__cache0) {
                    @__cache2;
                    .set 0;

                    @__cache3;
                    .inc;
                }

                !for(__cache3) {
                    @__cache0;
                    .inc;
                }

                !for(__cache2) {
                    @__cache1;
                    .dec;

                    !if(__cache1) {
                        @$a;
                        .dec;
                    }

                    @__cache1;
                    .inc;
                }
            }

            @$a;
            .inc;
        }
    }
}